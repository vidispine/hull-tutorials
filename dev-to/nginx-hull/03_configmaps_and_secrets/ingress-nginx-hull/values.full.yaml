hull:
  config:
    specific:
      controller:
        configMaps:
          tcp:
            mappings: {}
          udp:
            mappings: {}
  objects:
    configmap:
      addheaders:
        enabled: _HT?(index . "$").Values.hull.objects.configmap.addheaders.data
        data: {}
      proxyheaders:
        enabled: _HT?(index . "$").Values.hull.objects.configmap.proxyheaders.data
        data: {}
      tcp:
        enabled: _HT?(index . "$").Values.hull.config.specific.controller.configMaps.tcp.mappings
        data: |-
          _HT!{
            {{ range $key,$value :=  (index . "$").Values.hull.config.specific.controller.configMaps.tcp.mappings }}
            {{ $key }}: { inline: {{ $value }} },
            {{ end }}
          }
      udp:
        enabled: _HT?(index . "$").Values.hull.config.specific.controller.configMaps.udp.mappings
        data: |-
          _HT!{
            {{ range $key,$value :=  (index . "$").Values.hull.config.specific.controller.configMaps.udp.mappings }}
            {{ $key }}: { inline: {{ $value }} },
            {{ end }}
          }
      controller:
        data:
          add-headers:
            enabled: _HT?(index . "$").Values.hull.objects.configmap.addheaders.data
            path: files/add-headers
          set-proxy-headers:
            enabled: _HT?(index . "$").Values.hull.objects.configmap.proxyheaders.data
            inline: _HT!{{ (index . "$").Release.Namespace }}/{{ include "hull.metadata.fullname" (dict "PARENT_CONTEXT" (index . "$") "COMPONENT" "proxyheaders") }}
          allow-snippet-annotations:
            inline: "true"
          dhparam.pem:
            enabled: _HT?(index (index . "$").Values.hull.objects.secret.dhparam.data "dhparam.pem").inline
            inline: _HT!{{ (index (index . "$").Values.hull.objects.secret.dhparam.data "dhparam.pem").inline }}
    secret:
      dhparam:
        enabled: _HT?(index (index . "$").Values.hull.objects.secret.dhparam.data "dhparam.pem").inline
        data: 
          dhparam.pem: {}
